// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.1
// source: stock_sentiment/stock_sentiment.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Stock_Sentiment int32

const (
	Stock_Bullish Stock_Sentiment = 0
	Stock_Bearish Stock_Sentiment = 1
)

// Enum value maps for Stock_Sentiment.
var (
	Stock_Sentiment_name = map[int32]string{
		0: "Bullish",
		1: "Bearish",
	}
	Stock_Sentiment_value = map[string]int32{
		"Bullish": 0,
		"Bearish": 1,
	}
)

func (x Stock_Sentiment) Enum() *Stock_Sentiment {
	p := new(Stock_Sentiment)
	*p = x
	return p
}

func (x Stock_Sentiment) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Stock_Sentiment) Descriptor() protoreflect.EnumDescriptor {
	return file_stock_sentiment_stock_sentiment_proto_enumTypes[0].Descriptor()
}

func (Stock_Sentiment) Type() protoreflect.EnumType {
	return &file_stock_sentiment_stock_sentiment_proto_enumTypes[0]
}

func (x Stock_Sentiment) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Stock_Sentiment.Descriptor instead.
func (Stock_Sentiment) EnumDescriptor() ([]byte, []int) {
	return file_stock_sentiment_stock_sentiment_proto_rawDescGZIP(), []int{0, 0}
}

// Stock contains info about a particular stock and its tracked sentiment.
type Stock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ticker string `protobuf:"bytes,1,opt,name=ticker,proto3" json:"ticker,omitempty"`
	// TODO: sentiment is derived from score, maybe remove redundancy?
	Sentiment      Stock_Sentiment `protobuf:"varint,2,opt,name=sentiment,proto3,enum=Stock_Sentiment" json:"sentiment,omitempty"`
	SentimentScore float32         `protobuf:"fixed32,3,opt,name=sentiment_score,json=sentimentScore,proto3" json:"sentiment_score,omitempty"`
}

func (x *Stock) Reset() {
	*x = Stock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stock_sentiment_stock_sentiment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stock) ProtoMessage() {}

func (x *Stock) ProtoReflect() protoreflect.Message {
	mi := &file_stock_sentiment_stock_sentiment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stock.ProtoReflect.Descriptor instead.
func (*Stock) Descriptor() ([]byte, []int) {
	return file_stock_sentiment_stock_sentiment_proto_rawDescGZIP(), []int{0}
}

func (x *Stock) GetTicker() string {
	if x != nil {
		return x.Ticker
	}
	return ""
}

func (x *Stock) GetSentiment() Stock_Sentiment {
	if x != nil {
		return x.Sentiment
	}
	return Stock_Bullish
}

func (x *Stock) GetSentimentScore() float32 {
	if x != nil {
		return x.SentimentScore
	}
	return 0
}

// StockBatch stores an array of Stock objects and the corresponding
// date of their recording. Stocks objects are grouped by their
// date, which results in a batch.
type StockBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date string   `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	S    []*Stock `protobuf:"bytes,2,rep,name=s,proto3" json:"s,omitempty"`
}

func (x *StockBatch) Reset() {
	*x = StockBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stock_sentiment_stock_sentiment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StockBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockBatch) ProtoMessage() {}

func (x *StockBatch) ProtoReflect() protoreflect.Message {
	mi := &file_stock_sentiment_stock_sentiment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockBatch.ProtoReflect.Descriptor instead.
func (*StockBatch) Descriptor() ([]byte, []int) {
	return file_stock_sentiment_stock_sentiment_proto_rawDescGZIP(), []int{1}
}

func (x *StockBatch) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *StockBatch) GetS() []*Stock {
	if x != nil {
		return x.S
	}
	return nil
}

// RequestParams for fetching stock sentiments from StockSentiment service
type RequestParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If date is not specified, fetch the most recent batch of stocks
	Date *string `protobuf:"bytes,1,opt,name=date,proto3,oneof" json:"date,omitempty"`
}

func (x *RequestParams) Reset() {
	*x = RequestParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stock_sentiment_stock_sentiment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestParams) ProtoMessage() {}

func (x *RequestParams) ProtoReflect() protoreflect.Message {
	mi := &file_stock_sentiment_stock_sentiment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestParams.ProtoReflect.Descriptor instead.
func (*RequestParams) Descriptor() ([]byte, []int) {
	return file_stock_sentiment_stock_sentiment_proto_rawDescGZIP(), []int{2}
}

func (x *RequestParams) GetDate() string {
	if x != nil && x.Date != nil {
		return *x.Date
	}
	return ""
}

var File_stock_sentiment_stock_sentiment_proto protoreflect.FileDescriptor

var file_stock_sentiment_stock_sentiment_proto_rawDesc = []byte{
	0x0a, 0x25, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x6e,
	0x74, 0x2f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9f, 0x01, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x09, 0x73, 0x65, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x65, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09,
	0x73, 0x65, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0e, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x22, 0x25, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x0b, 0x0a, 0x07, 0x42, 0x75, 0x6c, 0x6c, 0x69, 0x73, 0x68, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x42, 0x65, 0x61, 0x72, 0x69, 0x73, 0x68, 0x10, 0x01, 0x22, 0x36, 0x0a, 0x0a, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x01, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x01,
	0x73, 0x22, 0x31, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x17, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x32, 0x45, 0x0a, 0x0e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x53, 0x65, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x53, 0x65, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x0e, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x0b, 0x2e, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x42, 0x61, 0x74, 0x63, 0x68, 0x22, 0x00, 0x42, 0x04, 0x5a, 0x02, 0x2e,
	0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_stock_sentiment_stock_sentiment_proto_rawDescOnce sync.Once
	file_stock_sentiment_stock_sentiment_proto_rawDescData = file_stock_sentiment_stock_sentiment_proto_rawDesc
)

func file_stock_sentiment_stock_sentiment_proto_rawDescGZIP() []byte {
	file_stock_sentiment_stock_sentiment_proto_rawDescOnce.Do(func() {
		file_stock_sentiment_stock_sentiment_proto_rawDescData = protoimpl.X.CompressGZIP(file_stock_sentiment_stock_sentiment_proto_rawDescData)
	})
	return file_stock_sentiment_stock_sentiment_proto_rawDescData
}

var file_stock_sentiment_stock_sentiment_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_stock_sentiment_stock_sentiment_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_stock_sentiment_stock_sentiment_proto_goTypes = []interface{}{
	(Stock_Sentiment)(0),  // 0: Stock.Sentiment
	(*Stock)(nil),         // 1: Stock
	(*StockBatch)(nil),    // 2: StockBatch
	(*RequestParams)(nil), // 3: RequestParams
}
var file_stock_sentiment_stock_sentiment_proto_depIdxs = []int32{
	0, // 0: Stock.sentiment:type_name -> Stock.Sentiment
	1, // 1: StockBatch.s:type_name -> Stock
	3, // 2: StockSentiment.GetStockSentiments:input_type -> RequestParams
	2, // 3: StockSentiment.GetStockSentiments:output_type -> StockBatch
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_stock_sentiment_stock_sentiment_proto_init() }
func file_stock_sentiment_stock_sentiment_proto_init() {
	if File_stock_sentiment_stock_sentiment_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_stock_sentiment_stock_sentiment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stock_sentiment_stock_sentiment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StockBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stock_sentiment_stock_sentiment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_stock_sentiment_stock_sentiment_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_stock_sentiment_stock_sentiment_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_stock_sentiment_stock_sentiment_proto_goTypes,
		DependencyIndexes: file_stock_sentiment_stock_sentiment_proto_depIdxs,
		EnumInfos:         file_stock_sentiment_stock_sentiment_proto_enumTypes,
		MessageInfos:      file_stock_sentiment_stock_sentiment_proto_msgTypes,
	}.Build()
	File_stock_sentiment_stock_sentiment_proto = out.File
	file_stock_sentiment_stock_sentiment_proto_rawDesc = nil
	file_stock_sentiment_stock_sentiment_proto_goTypes = nil
	file_stock_sentiment_stock_sentiment_proto_depIdxs = nil
}
